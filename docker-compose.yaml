services:
  postgres:
    image: postgres:16.6
    restart: always
    container_name: ${CONTAINER_NAME}_postgres
    ports:
      - 5432:5432
    environment:
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
       PGDATA: ${PGDATA}
    volumes:
      - postgres_data:${PGDATA}
    networks:
      - postgres_net
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Слушаем оба порта внутри контейнера
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      # Рекламируем адреса (для контейнеров и для localhost)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo:
    image: mongo
    container_name: ${CONTAINER_NAME}_mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongo_net
    volumes:
      - mongo_data:${MDATA}

  
  mongo-express:
    image: mongo-express
    container_name: ${CONTAINER_NAME}_mongo_express
    restart: always
    ports:
      - 8090:8081
    environment:
        ME_CONFIG_MONGODB_SERVER: mongo
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
        ME_CONFIG_BASICAUTH: ${ME_CONFIG_BASICAUTH}
    networks:
      - mongo_net
    depends_on:
      - mongo
  
  redis:
    image: redis
    container_name: ${CONTAINER_NAME}_redis
    restart: always
    ports:
      - 6379:6379
    environment:
       REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    command: ["redis-server", "--requirepass", "mysecretpassword"]
    
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"   
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq


volumes:
  rabbitmq_data:
  rabbitmq_logs:
  mongo_data:
  postgres_data:
  redis_data:

networks:
   postgres_net:
      driver: bridge
  
   mongo_net:
      driver: bridge